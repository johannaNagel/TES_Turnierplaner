
plugins {
    id('com.android.application')
    id('kotlin-android')
    id('com.google.gms.google-services')
    id('com.diffplug.spotless') version '6.0.0'
    id("net.ltgt.errorprone") version "2.0.2"
    id("com.dorongold.task-tree") version "2.1.0"

}

apply plugin: ("com.android.application")


android {
    compileSdk(31)

    /*splits {
        abi {
            enable true
            reset()
            include 'x86', 'x86_64', 'armeabi', 'armeabi-v7a', 'mips', 'mips64', 'arm64-v8a'
            universalApk true
        }
    }*/

    defaultConfig {
        applicationId("com.example.turnierplaner")
        minSdk(28)
        targetSdk(31)
        versionCode(1)
        versionName("1.0")

        testInstrumentationRunner("androidx.test.runner.AndroidJUnitRunner")
        testHandleProfiling = true
        testFunctionalTest = true

        vectorDrawables { useSupportLibrary(true) }
    }

    buildTypes {
        release {
            minifyEnabled(false)
            proguardFiles getDefaultProguardFile ('proguard-android-optimize.txt')
            ('proguard-rules.pro')
        }
    }
    compileOptions {
        sourceCompatibility(JavaVersion.VERSION_11)
        targetCompatibility(JavaVersion.VERSION_11)
    }
    kotlinOptions {
        jvmTarget = ('11')
        useIR = (true)
    }
    buildFeatures { compose(true) }
    composeOptions {
        kotlinCompilerExtensionVersion(compose_version)
        kotlinCompilerVersion('1.5.21')
    }
    packagingOptions { resources { excludes += '/META-INF/{AL2.0,LGPL2.1}' } }

    // Encapsulates options for running tests.
    testOptions {
        // Changes the directory where Gradle saves test reports. By default,
        // Gradle saves test reports in the
        // path_to_your_project/module_name/build/outputs/reports/ directory.
        // '$rootDir' sets the path relative to the root directory of the
        // current project.
        reportDir("$rootDir/test-reports")
        // Changes the directory where Gradle saves test results. By default,
        // Gradle saves test results in the
        // path_to_your_project/module_name/build/outputs/test-results/ directory.
        // '$rootDir' sets the path relative to the root directory of the
        // current project.
        resultsDir("$rootDir/test-results")

        // Always show the result of every unit test, even if it passes.
        unitTests {

            returnDefaultValues(true)

            all {
                testLogging {
                    events('passed', 'skipped', 'failed', 'standardOut', 'standardError')
                }
            }
        }
    }
}

dependencies {

    // Navigation Dependency
    implementation("androidx.navigation:navigation-compose:2.4.0-beta02")

    // Compose Dependencies
    implementation("androidx.compose.ui:ui-tooling:$compose_version")
    implementation("androidx.compose.material:material:$compose_version")
    implementation("androidx.compose.ui:ui-tooling-preview:$compose_version")
    implementation("androidx.compose.ui:ui:$compose_version")
    implementation('androidx.core:core-ktx:1.7.0')
    implementation('androidx.appcompat:appcompat:1.3.1')
    implementation('com.google.android.material:material:1.4.0')
    implementation("androidx.compose.foundation:foundation:1.0.0-beta09")
    implementation("androidx.compose.material:material-icons-extended:$compose_version")
    implementation('androidx.activity:activity-compose:1.4.0')
    androidTestImplementation("androidx.compose.ui:ui-test-junit4:$compose_version")
    debugImplementation("androidx.compose.ui:ui-tooling:$compose_version")
    implementation("androidx.compose.material:material-icons-extended:$compose_version")

    // Firebase Dependencies
    implementation(platform("com.google.firebase:firebase-bom:28.2.0"))
    implementation('com.google.firebase:firebase-auth:21.0.1')
    implementation('com.google.firebase:firebase-auth-ktx:21.0.1')
    implementation('com.google.firebase:firebase-core:9.6.1')
    implementation ('com.google.gms:google-services:4.3.10')


    // errorprone Dependency
    errorprone("com.google.errorprone:error_prone_core:2.9.0")

    // Coroutines Dependencies
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.5.0")

    implementation('androidx.constraintlayout:constraintlayout:2.1.1')
    implementation('com.google.android.gms:play-services-auth:19.0.0')
    implementation('androidx.core:core-ktx:1.7.0')
    implementation('androidx.appcompat:appcompat:1.4.0')
    implementation('com.google.android.material:material:1.4.0')
    implementation('androidx.lifecycle:lifecycle-runtime-ktx:2.4.0')
    implementation('androidx.activity:activity-compose:1.4.0')

    androidTestImplementation('androidx.test.ext:junit:1.1.3')
    androidTestImplementation('androidx.test.espresso:espresso-core:3.4.0')

    androidTestImplementation("androidx.compose.ui:ui-test-junit4:$compose_version")
    debugImplementation("androidx.compose.ui:ui-tooling:$compose_version")
    implementation("androidx.compose.material:material-icons-extended:$compose_version")
    implementation("org.jetbrains.kotlin:kotlin-script-runtime:1.5.31")

    // errorprone Dependency
    errorprone("com.google.errorprone:error_prone_core:2.9.0")

    // Juni Dependency
    testImplementation('junit:junit:4.13.2')
    testImplementation('org.jetbrains.kotlin:kotlin-test')

    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:29.0.3')

    // Declare the dependency for the Realtime Database library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation('com.google.firebase:firebase-database-ktx')

    // Activity Compose
    implementation "androidx.activity:activity-compose:1.4.0"

    // CameraX
    implementation "androidx.camera:camera-camera2:1.0.2"
    implementation "androidx.camera:camera-lifecycle:1.0.2"
    implementation "androidx.camera:camera-view:1.0.0-alpha31"

    // Zxing
    implementation 'com.google.zxing:core:3.3.3'
    implementation 'com.journeyapps:zxing-android-embedded:3.0.2@aar'

    implementation 'com.google.firebase:firebase-inappmessaging-display:17.2.0'
    implementation 'com.google.guava:guava:27.0.1-android'

    implementation 'com.google.mlkit:barcode-scanning:17.0.2'

    implementation 'androidmads.library.qrgenearator:QRGenearator:1.0.4'
    implementation 'com.google.zxing:core:3.3.2'

    //Camera Permission
    implementation "com.google.accompanist:accompanist-permissions:0.19.0"

    def camerax_version = "1.0.2"
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    implementation "androidx.camera:camera-view:1.0.0-alpha29"


}

spotless {
    kotlin {
        // by default the target is every '.kt' and '.kts` file in the java sourcesets
        target('**/*.kt', '**/*.kts')
        ktlint()
        ktfmt()
        // diktat()
        // prettier()
        licenseHeader('/* (C)$YEAR */') // or licenseHeaderFile
    }
    kotlinGradle {
        target('**/*.gradle')
        //ktlint()
    }
}

tasks.withType(JavaCompile) { options.errorprone.disableWarningsInGeneratedCode.set(true) }

/* ktlint-disable no-alert, no-console */


apply plugin: ("com.google.gms.google-services")

/* ktlint-disable no-alert, no-console */